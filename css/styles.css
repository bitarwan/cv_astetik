body {
    color: #40514E;
    margin: 0;
    text-align: center;
    font-family: 'Manrope', sans-serif;
}

/* Cuando trabajamos con font-size, los (px) son estaticos y los (%) y (em)
   son dinamicos, pero muchos desarrolladores insisten en que la gente modifica
   el zoom y no el tamaño de la letra, por ende dejan tamaños estaticos, el
   zoom no modifica nada!
   Otra cosa es que si al padre del elemento le ponemos un font size,
   el font size del propio elemento SE POTENCIARA con el de su padre, lo que
   puede derivar en un error de estetica si no lo notamos.
   SE RECOMIENDA USAR SIEMPRE REM, ES EL MAS LIBRE DE ERROR.
*/
h1 {
    font-size: 550%;
    /* 100% = 16 px = 1em */
    margin-top: 0;
    margin-bottom: 0;
    font-family: 'Dancing Script', cursive;
    /* line-height: 2        use integers here to better results */
}

h2 {
    font-size: 400%;
    /* 100% = 16 px = 1em */
    margin-top: 0;
    margin-bottom: 0;
    font-family: 'Dancing Script', cursive;
    font-weight: normal;
}

h3 {
    font-size: 200%;
    /* 100% = 16 px = 1 em*/
    text-decoration: bold;
}

p {
    font-size: 150%;
    /* 100% = 16 px = 1em*/
}

hr {
    border-style: dotted none none none;
    border-color: grey;
    border-width: 5px;
    height: 30px;
    width: 5%;
}

a {
    text-decoration: none;
}

a:hover {
    color: #E4F9F5;
}

.top-container {
    background-color: #E4F9F5;
    margin: 0;
    position: relative;
    padding-top: 100px;
}

.bottom-cloud {
    position: absolute;
    left: 300px;
    bottom: 300px;
}

.top-cloud {
    position: absolute;
    right: 300px;
    top: 50px
}

.profile {
    margin: auto;
    width: 25%;
}

.middle-container {
    background-color: white;
    margin-bottom: 100px;
}

.bottom-container {
    background-color: #66BFBF;
}

.skills {
    background-color: white;
}

.profile-pic {
    height: 250px;
    margin: 20px 0;
}

/* Para poder poner un elemento junto a otro, como una imagen junto a
   un texto, usamos float, y trata de alinear en la division realizada, el
   elemento, donde lo colocamos con los demas. El antifloat, para
   "desalinear" los elementos y hacer que se ubiquen debajo (por ejemplo) es
   el clear (en este caso clear:left). Esto solo funciona si el lado que
   estamos seleccionando en la instruccion es el que el elemento esta
   "envolviendo" o modificandose alrededor.

   FLOAT SE SUELE ABUSAR DE SOBREMANERA, Solo debemos usarlo con su fin,
   envolver texto alrededor de un elemento, para lo demas debemos usar
   todas las otras herramientas disponibles en CSS.

   Para posicionamiento debemos usar posicionamiento relativo, absoluto, margen
   padding, etc. Vamos a evitar muchisimos problemas.
*/
.computer-img {
    height: 210px;
    border-radius: 50%;
    margin: 20px 30px 20px 20px;
    float: left;
}

.worker-img {
    border-radius: 50%;
    height: 200px;
    margin: 30px;
    float: right;
}

/*
.code-for-me {
    clear: left;
}
*/
.encabezado {
    color: #40514E;
}

.skill-row {
    width: 50%;
    margin: 100px auto;
    text-align: left;
    line-height: 2;
}

.myButton {
	box-shadow: 0 10px 14px -7px #276873;
	background:linear-gradient(to bottom, #599bb3 5%, #408c99 100%);
	background-color:#599bb3;
	border-radius:8px;
	display:inline-block;
	cursor:pointer;
	color:#ffffff;
	font-family:Arial;
	font-size:20px;
	font-weight:bold;
	padding:13px 32px;
	text-decoration:none;
	text-shadow:0 1px 0 #3d768a;
}
.myButton:hover {
	background:linear-gradient(to bottom, #408c99 5%, #599bb3 100%);
	background-color:#408c99;
}
.myButton:active {
	position:relative;
	top:1px;
}

.ending {
    position: relative;
    top: 100px;
    color: #EAF6F6;
}

.bottom-container {
    height: 200px;
}


.footer-link {
    position: relative;
    top: 50px;
    color: #3d768a;
    padding-top: 25px;
    margin: 10px
}

.contact-me {
    margin: auto;
    width: 25%;
}
